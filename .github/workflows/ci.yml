name: Build

# MATRIX APPROACH USED SO WE CAN BUILD THE DOCKER IMAGES IN PARALLEL (quicker ci)

on:
  push:
    branches:
      - master 
jobs:

  terraform-validate:
    strategy:
      matrix:
        env: [dev]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Terraform via Docker and Validate
        run: |
          cd terraform
          docker build -t ${{ matrix.env }}-tf-test --build-arg ENV=${{ matrix.env }} .

  changed-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' 

      - name: Run Python Unit Tests
        run: |
          make python_tests

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Print Changed Files
        id: print-changed-files
        run: |
          make get_changed_files changed_files="${{ steps.changed-files.outputs.all_changed_files }}"

      - name: check output
        run: |
          echo "test: ${{ steps.print-changed-files.outputs.files_matrix }}"


  test-output:
    runs-on: ubuntu-latest
    needs:
      - changed-files
    steps:
      - name: Display Changed Files
        run: echo "nothing right now"
        

  build:
    strategy:
      matrix:
        service_name: ["auth-service"]

    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
     
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Disable UNIT TEST for now
    - name: Run Unit Tests
      run: |
        sudo apt-get install libcurl4
        export ENVIRONMENT=ci
        export JWT_SECRET=secret123
        cd ${{ matrix.service_name }} && npm install && npm run test

    - name: Build and Push Docker Images
      run: |
        docker build ./${{ matrix.service_name }} -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service_name }}:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service_name }}:latest
